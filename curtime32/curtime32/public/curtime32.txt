=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                            CURrent TIME'32 console utility
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
1. License:
 CURTIME32 - Current Time'32 console utility
 FREEWARE (C) 2004-2006 Sergey Kulik aka Saboteur
 Contact author: saboteur@saboteur.com.ua

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
2. Purpose:
   Print all arguments to stdout, replacing all internal substitutes with
    special values from date/time.
   Was created to simplify batch scripting, logging and other console stuff.
   Program was based on DOS version of CurTime
   After porting we have the following changes:
    * No problems with using long file names
    * Command line length is not limited by 128 characters
    * We are using windows API methods, so this version will not work under DOS
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
3. Usage examples:

a) Write data to log file, log file name also contains substitutes:

   --- start of backup.bat ---
   curtime32 "Backup started at $T" /file d:\backup\$d$M.log
   rar a -r d:\backup\periodic.rar c:\base\*.*
   curtime32 "Backup completed at $T$c==========" /file d:\backup\$d$M.log
   ---- end of backup.bat ---

b) Backing up database using console rar archiver, the name of archive will
   contains current date:

   curtime32 "rar.exe a -r d:\Backup_$y$M$d.rar c:\bases\*.*" /exec >>backup.log

d) Utility supports redirections:

   echo Сегодня у нас $V|curtime32
   type text.txt|curtime32

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
4. Help:

   curtime32.exe
    Without arguments utility will waits for input from STDIN.

   curtime32.exe arg1 arg2 arg3... argn [> >> output]
    If output skipped, stdout will be used
    You can use quotas or just specify arguments, all spaces will be
     squeezed in this case:

      curtime32 arg1 arg2     = "arg1 arg2"
      curtime32 arg1   arg2   = "arg1 arg2"
      curtime32 "arg1   arg2" = "arg1   arg2"

   You can use redirections:
   echo arg | curtime32.exe

     Options:

   /h               - Help
   /file <filename> - Filename for output (filename also can contains substitutes)
                      Data will be written to the end of file (append).
   /exec            - After parsing input, execute the resulting line
   /time            - Used only with /exec option. Shows execution time.

     Substitutes: 

   $c - new line
   $p - space
   \" - quotas
   $$ - dollar sign
   $T - time in format       [hh:mm:ss]
   $D - date in format       [Jan dd yyyy]
   $Z - rus datein format    [Янв дд гггг]
   $F - date/time as         [Mon Jan dd hh:mm:ss yyyy]
   $f - date/time as         [Пн Янв дд чч:мм:сс гггг]
   $Y - 4-digit year         [yyyy]
   $y - 2-digit year         [yy]
   $j - short month name     [Jan]
   $J - full month name      [January]
   $g - short rus month name [Янв]
   $g - full rus month name  [Январь]
   $M - month as number      [xx]
   $d - day of month, number [xx]
   $n - day of week, number  [xx]
   $w - short day of week    [Mon]
   $W - full day of week     [Monday]
   $v - rus short day of weel[Пн]
   $V - rus full day of week [Понедельник]
   $h - hours                [xx]
   $m - minutes              [xx]
   $s - seconds              [xx]
   $S - milliseconds         [xxx]
   $U - timestamp (seconds starting 01/01/1970)  [xxxxxxxxxx]
   $u - set curtime internal time according to the provided
        syntax: $uXXXXXXXXXX (10 digits)
        как если бы оно было установлено при помощи $+ или $-...
        Example:
          >curtime32 "$u0$Y $M $d $h:$m:$s"
          1970 01 01 00:00:00
          >curtime32.exe $u113025982$w $j $d $h:$m:$s $Y
          Wed Aug 01 04:06:22 1973
   $+xy - change curtime internal time (add)
   $-xy - change curtime internal time (subtract)
   $*   - reset curtime internal time to the current local date/time
          x - in range between 0 and 32000
          y - s-seconds, m-minutes, h-hours, d-days

          fi x=1, you can skip it ($+1d is the same as $+d)

          "$+d$d" - add one day, show day of month
          "$+2d$d$-5d$d$*$d" - add two days, show day of month (DoM), subtract 5 days
            show DoM, reset date to current, show DoM.
   
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
5. Changes history:

   v 1.0 - first release after porting dos16 to win32
         + add milliseconds
         - found codepage issues
         - temporarily doesn't work time shifting  (bugreport by Goncharov A.M.)
   v 1.2 - fixed bug with $$
         - fixed bug with month number
   v 1.3 - fixed bug with day numbers
         - fixed bug with redirection
   v 1.5 - fixed bug with time shifts (thankf to Pavel A Resh)
   v 1.6 - Added new help file
   v 1.7 - 15.08.2005 Added works with timestamp
   v 1.8 - 12.08.2008 fixed issues related to internal redirections, like
               curtime32 "echo aa" /exec /file file.txt - "aa" was send to std instead of /file
   v 1.9 - 18.09.2008 add timestamp output
   v 1.10- 27.04.2009 fixed codepages in interactive work and in batch scripts (use CP866 in scripts)
           thanks to  Yakov Kaluzhenko
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
