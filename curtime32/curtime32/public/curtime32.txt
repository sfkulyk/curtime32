=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                            CURrent TIME'32 console utility
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
1. Лицензионное соглашение:
 CURTIME32 - Current Time'32 console utility
 FREEWARE (C) 2004-2005 Sergey Kulik aka Saboteur
 Contact author: saboteur@biocon.kiev.ua

   Программа распространяется бесплатно, с учетом, что этот текстовый файл
 будет распространятся вместе с исполняемым.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
2. Назначение программы:
   Программа просто выдает все аргументы в стандартный выход, но вдобавок
 позволяет использовать макросы, которые заменяются на соответсвующие значения
 (см. справку по макросам).
   Была создана для облегчения написания BAT-скриптов, аккуратных записей в
 логах и другого консольного использования.
   Программа является продолжением проекта CurTime, переведенного в win32
 приложение.
   Вследствие портирования автоматически исчезли следующие проблемы, которые
 были в досовской версии curtime:
    * теперь нет проблем с длинными именами файлов
    * теперь нет ограничения длины командной строки в 128 символов
    * используются только api функции, посему не вызывается dos-machine
      и выполнение программы происходит быстрее и корректнее под win32
      системами
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
3. Пример использования:

a) выполняем запись в лог файл с указанием даты запущенного. Имя лог-файла
   состоит из даты - день и месяц.

   --- начало backup.bat ---
   curtime32 "Архивирование запущено в $T" /file d:\backup\$d$M.log
   rar a -r d:\backup\periodic.rar c:\base\*.*
   curtime32 "Архивирование завершено в $T$c==========" /file d:\backup\$d$M.log
   ---- конец backup.bat ---

b) выполняем архивацию файлов базы данных в архив, с именем, состоящим из года,
    месяца и дня выполнения архивации

   --- начало backup.bat ---
   curtime32 "rar.exe a -r d:\Backup_$y$M$d.rar c:\bases\*.*" /exec >>backup.log
   ---- конец backup.bat ---

d) Поддержка перенаправления ввода:

   echo Сегодня у нас $V|curtime32
   type text.txt|curtime32

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
4. Справка по использованию:

   Использование:
   curtime32.exe
    При запуске программы без аргументов, она будет ожидать ввода данных из
    стандартного ввода STDIN. перенаправление поддерживается.

   curtime32.exe arg1 arg2 arg3... argn [> >> output]
    output - может быть файл или другой поток, если не указан - на экран.
    аргументы можно заключать в кавычки, аргументы без кавычек объединяются,
    отделяясь друг от друга ОДНИМ пробелом, то есть

      curtime32 arg1 arg2     = "arg1 arg2"
      curtime32 arg1   arg2   = "arg1 arg2"
      curtime32 "arg1   arg2" = "arg1   arg2"

   можно перенаправлять в curtime из другой программы, например из echo
   echo arg | curtime32.exe

     Справка по аргументам:

   -h - вывод справки по макросам
   /file <filename> - имя файла для вывода. Может содержать макросы. Запись
                      происходит добавлением в файл, а не перезаписыванием.
   /exec            - произойдет выполнение строки аргументов, что весьма
                      удобно для автоматизирования процессов
   /time            - используется только совместно с /exec, иначе не
                      производит никаких действий. По завершению выполнения
                      команды выводит длительность ее выполнения.

     Справка по макросам: 

   $c - перевод строки
   $p - пробел
   \" - символ кавычек
   $$ - символ доллара
   $T - время в виде       [hh:mm:ss]
   $D - дата в виде        [Jan dd yyyy]
   $Z - дата в виде        [Янв дд гггг]
   $F - дата/время в виде  [Mon Jan dd hh:mm:ss yyyy]
   $f - дата/время в виде  [Пн Янв дд чч:мм:сс гггг]
   $Y - год в виде         [yyyy]
   $y - год в виде         [yy]
   $j - месяц в виде       [Jan]
   $J - месяц в виде       [January]
   $g - месяц в виде       [Янв]
   $g - месяц в виде       [Январь]
   $M - месяц в виде       [xx]
   $d - день месяца в виде [xx]
   $n - день недели в виде [xx]
   $w - день недели в виде [Mon]
   $W - день недели в виде [Monday]
   $v - день недели в виде [Пн]
   $V - день недели в виде [Понедельник]
   $h - час в виде         [xx]
   $m - минуты в виде      [xx]
   $s - секунды в виде     [xx]
   $S - милисекунды в виде [xxx]
   $U - вывод количества секунд с 1970 года (юникс-время) [xxxxxxxxxx]
   $u - Конвертирование времени из unix-like вида в любое.
        синтаксис: после $u должно идти 10-значное время в формате юникс
        (количество секунд после 1970 года). Если цифр больше - остальные
        воспринимаются как обычный текст. Если меньше - первая же не цифра
        указывает на конец данных. После команды $u время можно вывести
        любыми другими командами - оно установлено как если бы оно было
        установлено при помощи $+ или $-.
        Функция не до конца проверена. Например время показывается не
        региональное (например +2 часа), а по Гринвичу.
        Примеры:
          >curtime32 "$u0$Y $M $d $h:$m:$s"
          1970 01 01 00:00:00

          >curtime32.exe $u113025982$w $j $d $h:$m:$s $Y
          Wed Aug 01 04:06:22 1973

   $+xy - изменить выводимую дату/время
   $-xy - изменить выводимую дату/время
          x - от 0 до 32000
          y - s-секунды, m-минуты, h-часы, d-дни
          если x=1, то его можно не писать ($+1d тоже что и $+d)
          Последние три команды не выводят информацию, а лишь изменяют,
          то есть если вы хотите вывести какое число будет завтра, то нужно
          писать "$+d$d" - $+d - прибавляем один день, $d - выводим дату.
          "$+2d$d$-5d$d$*$d"
          прибавить два дня, вывести число, отнять 5 дней, вывести число,
          установить текущее время/дату, вывести число.
   $* - изменить выводимую дату/время на текущую (сброс изменений, обновление)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
5. История создания:
Версия
   v 1.0 - первый релиз после портирования с dos16 в win32
         + добавлены милисекунды
         - обнаружены проблемы с кодировками
         - временно не работает "сдвиг" времени
         спасибо за багрепорты Гончаров.А.М.
   v 1.2 - исправлен баг с $$
         - исправлен баг с номерами месяцев
   v 1.3 - исправлен баг с номерами дней недели
         - исправлен баг с кодировками при перенаправлении echo | curtime32
   v 1.5 - восстановлена работа "сдвигов времени"
           спасибо за багрепорт Pavel A Resh
   v 1.6 - добавлен хелп-файл
         - исправлены очепятки в коде
   v 1.7 - 15.08.2005 добавлена возможность конвертировать время из unix-like в любое
   v 1.8 - 12.08.2008 исправлена работа конструкций типа curtime32 "echo aa" /exec /file file.txt
           в которой вывод aa шел в std а не в указанный file.txt
   v 1.9 - 18.09.2008 добавлен $U - вывод количества секунд с 1.1.1970 года (unix-формат)
   v 1.10- 27.04.2009 исправлена работа с кодировкой, теперь корректно выводит
           русские символы в командной строке и в батниках (в бат файлах следует
           пользоваться досовской кодировкой CP866)
           спасибо за багрепорт Yakov Kaluzhenko
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
